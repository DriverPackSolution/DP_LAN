;/***************************************************************************\
;|*                                                                           *|
;|*         Copyright 2001-2008 NVIDIA, Corporation.  All rights reserved.    *|
;|*                                                                           *|
;|*     THE INFORMATION CONTAINED HEREIN  IS PROPRIETARY AND CONFIDENTIAL     *|
;|*     TO NVIDIA, CORPORATION.   USE,  REPRODUCTION OR DISCLOSURE TO ANY     *|
;|*     THIRD PARTY IS SUBJECT TO WRITTEN PRE-APPROVAL BY NVIDIA, CORP.       *|
;|*                                                                           *|
;|*     THE INFORMATION CONTAINED HEREIN IS PROVIDED  "AS IS" WITHOUT         *|
;|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND, INCLUDING ALL IMPLIED        *|
;|*     WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A     *|
;|*     PARTICULAR PURPOSE.                                                   *|
;|*                                                                           *|
;\***************************************************************************/

[version]
Class       = Net
ClassGUID   = {4D36E972-E325-11CE-BFC1-08002BE10318}
Signature   = "$WINDOWS NT$"
Compatible  = 1
CatalogFile = NVENETFD.CAT
Provider    = %Nvidia%
DriverVer   = 08/01/2008, 67.8.9 ;Changelist 2638902


[Manufacturer]
%Nvidia%    = Nvidia, NTamd64


[Nvidia.NTamd64]
%NVENETFD.DeviceDesc%  =  NVENET41.NDI,          PCI\VEN_10DE&DEV_0057
%NVENETFD.DeviceDesc%  =  NVENET51.NDI,          PCI\VEN_10DE&DEV_0269
%NVENETFD.DeviceDesc%  =  NVENET55.NDI,          PCI\VEN_10DE&DEV_0373
%NVENETFD.DeviceDesc%  =  NVENET61.NDI,          PCI\VEN_10DE&DEV_03EF
%NVENETFD.DeviceDesc%  =  NVENET65.NDI,          PCI\VEN_10DE&DEV_0450
%NVENETFD.DeviceDesc%  =  NVENET67.NDI,          PCI\VEN_10DE&DEV_054C
%NVENETFD.DeviceDesc%  =  NVENET73.NDI,          PCI\VEN_10DE&DEV_07DC
%NVENETFD.DeviceDesc%  =  NVENET77.NDI,          PCI\VEN_10DE&DEV_0760
%NVENETFD.DeviceDesc%  =  NVENET79.NDI,          PCI\VEN_10DE&DEV_0AB0
%NVENETVFD.DeviceDesc% =  NVENETVFD.ndi,         NVENET_VFD


[ControlFlags]
ExcludeFromSelect = PCI\VEN_10DE&DEV_0057,\
                    PCI\VEN_10DE&DEV_0269, \
                    PCI\VEN_10DE&DEV_0373, \
                    PCI\VEN_10DE&DEV_03EF, \
                    PCI\VEN_10DE&DEV_0450, \
                    PCI\VEN_10DE&DEV_054C, \
                    PCI\VEN_10DE&DEV_07DC, \
                    PCI\VEN_10DE&DEV_0760, \
                    PCI\VEN_10DE&DEV_0AB0, \
                    NVENET_VFD




;=========================================================================================
;                                            NVENET2S Section
;=========================================================================================

[NVENET2S.NDI.NTamd64]
Characteristics        = 0x84                                       ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                          ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      BasicFlowControl.reg,       \
                         NetworkAddress.reg,    BasicPriority.reg,                                        \
                         LSOv4.reg,             LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                         TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg,  IPChecksumOffloadV4.reg,    \
                         TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg,  Support.reg
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                                          ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                                          ; NdisMedium802_3
*PhysicalMediaType     = 14                                         ; NdisPhysicalMedium802_3 

[NVENET2S.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET30 Section
;=========================================================================================

[NVENET30.NDI.NTamd64]
Characteristics        = 0x84                             ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                         NetworkAddress.reg,    BasicFlowControl.reg,         BasicPriority.reg,          \ 
                         LSOv4.reg,             LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                         TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg,  IPChecksumOffloadV4.reg,    \
                         TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg,  Support.reg 
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                                ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                                ; NdisMedium802_3
*PhysicalMediaType     = 14                                ; NdisPhysicalMedium802_3

[NVENET30.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET40 Section
;=========================================================================================

[NVENET40.NDI.NTamd64]
Characteristics        = 0x84                             ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                ; PCIBus
AddReg                 =  BasicFeatures.reg,    SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                          NetworkAddress.reg,   BasicFlowControl.reg,         BasicPriority.reg,          \
                          LSOv4.reg,            LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                          TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg, IPChecksumOffloadV4.reg,    \
                          TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg, Support.reg
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                               ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                               ; NdisMedium802_3
*PhysicalMediaType     = 14                              ; NdisPhysicalMedium802_3

[NVENET40.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET41 Section
;=========================================================================================

[NVENET41.NDI.NTamd64]
Characteristics        = 0x84                             ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                ; PCIBus
AddReg                 =  BasicFeatures.reg,    SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                          NetworkAddress.reg,   BasicFlowControl.reg,         BasicPriority.reg,          \
                          LSOv4.reg,            LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                          TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg, IPChecksumOffloadV4.reg,    \                         
                          TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg, Support.reg
DelReg                 =  TCPChimneyDel.reg 
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                               ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                               ; NdisMedium802_3
*PhysicalMediaType     = 14                              ; NdisPhysicalMedium802_3

[NVENET41.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET51 Section
;=========================================================================================

[NVENET51.NDI.NTamd64]
Characteristics        = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                  ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      BasicFlowControl.reg ,      \
                         NetworkAddress.reg,    BasicPriority.reg,            Support.reg
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                                  ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                                  ; NdisMedium802_3
*PhysicalMediaType     = 14                                 ; NdisPhysicalMedium802_3

[NVENET51.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 


;=========================================================================================
;                                            NVENET55 Section
;=========================================================================================

[NVENET55.NDI.NTamd64]
Characteristics        = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                  ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                         NetworkAddress.reg,    ReceiveSideScaling.reg,       FlowControl.reg,            \
                         LSOv4.reg,             LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                         TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg,  IPChecksumOffloadV4.reg,    \
                         TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg,  BasicPriority.reg,          \                       
                         Support1.reg
DelReg                 = TCPChimneyDel.reg 
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                                  ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                                  ; NdisMedium802_3
*PhysicalMediaType     = 14                                 ; NdisPhysicalMedium802_3

[NVENET55.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET61 Section
;=========================================================================================

[NVENET61.NDI.NTamd64]
Characteristics       = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType               = 5                                  ; PCIBus
AddReg                = BasicFeatures.reg,      SpeedDuplexUpto1000.reg,      FlowControl.reg,            \
                        NetworkAddress.reg,     BasicPriority.reg,            PhyReset.Reg,               \
                        Support.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                   ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                   ; NdisMedium802_3
*PhysicalMediaType    = 14                                  ; NdisPhysicalMedium802_3

[NVENET61.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 


;=========================================================================================
;                                            NVENET61_DELL Section
;=========================================================================================

[NVENET61_DELL.NDI.NTamd64]
Characteristics       = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType               = 5                                  ; PCIBus
AddReg                = BasicFeatures.reg,      SpeedDuplexNoAutoForce.reg,   FlowControl.reg,            \
                        BasicPriority.reg,      Support.reg
DelReg                = SpeedDuplexUpto1000Del.reg, NetworkAddressDel.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                   ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                   ; NdisMedium802_3
*PhysicalMediaType    = 14                                  ; NdisPhysicalMedium802_3

[NVENET61_DELL.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 


;=========================================================================================
;                                            NVENET65 Section
;=========================================================================================

[NVENET65.NDI.NTamd64]
Characteristics        = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                  ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                         NetworkAddress.reg,    FlowControl.reg,              BasicPriority.reg,          \
                         PhyReset.Reg,          Support.reg
DelReg                 = LSOv4Del.reg,          LSOv2Ipv4Del.reg,             LSOv2Ipv6Del.reg,           \
                         ReceiveSideScalingDel.reg,          IPChecksumOffloadV4Del.reg,                  \                        
                         TCPChecksumOffloadV4Del.reg,        UDPChecksumOffloadV4Del.reg,                 \
                         TCPChecksumOffloadV6Del.reg,        UDPChecksumOffloadV6Del.reg             
CopyFiles              = NVENET.CopyFiles
*IfType                = 6                                  ; IF_TYPE_ETHERNET_CSMACD
*MediaType             = 0                                  ; NdisMedium802_3
*PhysicalMediaType     = 14                                 ; NdisPhysicalMedium802_3

[NVENET65.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 

;=========================================================================================
;                                            NVENET67 Section
;=========================================================================================

[NVENET67.NDI.NTamd64]
Characteristics       = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType               = 5                                  ; PCIBus
AddReg                = BasicFeatures.reg,      SpeedDuplexUpto1000.reg,      FlowControl.reg,            \
                        NetworkAddress.reg,     BasicPriority.reg,            Support.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                   ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                   ; NdisMedium802_3
*PhysicalMediaType    = 14                                  ; NdisPhysicalMedium802_3

[NVENET67.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 


;=========================================================================================
;                                            NVENET73 Section
;=========================================================================================

[NVENET73.NDI.NTamd64]
Characteristics        = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                  ; PCIBus
AddReg                = BasicFeatures.reg,      SpeedDuplexUpto1000.reg,      FlowControl.reg,            \
                        NetworkAddress.reg,     BasicPriority.reg,            PhyReset.reg,               \
                        Support.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                   ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                   ; NdisMedium802_3
*PhysicalMediaType    = 14                                  ; NdisPhysicalMedium802_3

[NVENET73.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 
Addreg=MSIInterrupts.reg

;=========================================================================================
;                                            NVENET77 Section
;=========================================================================================

[NVENET77.NDI.NTamd64]
Characteristics       = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType               = 5                                  ; PCIBus

AddReg                = BasicFeatures.reg,      SpeedDuplexUpto1000.reg,      NetworkAddress.reg,         \
                        BasicPriority.reg,      FlowControl.reg,              PhyReset.Reg,               \
                        LSOv4.reg,              LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                        TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg,   IPChecksumOffloadV4.reg,    \
                        TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg,   Support.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                  ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                  ; NdisMedium802_3
*PhysicalMediaType    = 14                                 ; NdisPhysicalMedium802_3

[NVENET77.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 
Addreg=MSIInterrupts.reg

;=========================================================================================
;                                            NVENET79 Section
;=========================================================================================

[NVENET79.NDI.NTamd64]
Characteristics        = 0x84                               ; NCF_PHYSICAL | NCF_HAS_UI
BusType                = 5                                  ; PCIBus
AddReg                 = BasicFeatures.reg,     SpeedDuplexUpto1000.reg,      JumboPacket.reg,            \
                         NetworkAddress.reg,    FlowControl.reg,              BasicPriority.reg,          \
                         LSOv4.reg,             LSOv2Ipv4.reg,                LSOv2Ipv6.reg,              \
                         TCPChecksumOffloadV4.reg, UDPChecksumOffloadV4.reg,  IPChecksumOffloadV4.reg,    \
                         TCPChecksumOffloadV6.reg, UDPChecksumOffloadV6.reg,  PhyReset.reg,               \
                         Support.reg
CopyFiles             = NVENET.CopyFiles
*IfType               = 6                                   ; IF_TYPE_ETHERNET_CSMACD
*MediaType            = 0                                   ; NdisMedium802_3
*PhysicalMediaType    = 14                                  ; NdisPhysicalMedium802_3

[NVENET79.NDI.NTamd64.hw]
Include=machine.inf 
Needs=PciIoSpaceNotRequired 
Addreg=MSIInterrupts.reg


;=========================================================================================
;                                            NVENET VFD Section
;=========================================================================================

[NVENETVFD.NDI.NTamd64]
AddReg  = NVENETVFD.NDI.AddReg
Characteristics        = 0xA1          ; NCF_VIRTUAL | NCF_HAS_UI | NCF_NOT_USER_REMOVABLE
*IfType                = 6             ; IF_TYPE_ETHERNET_CSMACD 
*MediaType             = 0             ; NdisMedium802_3 
*PhysicalMediaType     = 14            ; NdisPhysicalMedium802_3


; DestinationDirs
[NVENET.CopyFiles]
nvmfdx64.sys,nvmfdx64.sys,,2


;=========================================================================================
;                                        Services Section
;=========================================================================================

[NVENET2S.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET30.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET40.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET41.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET51.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET55.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET61.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET61_DELL.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET65.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET67.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET73.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET77.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog

[NVENET79.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog


[NVENETVFD.ndi.NTamd64.Services]
AddService = NVENETFD, 2, NVENETFD.Service, common.EventLog


[NVENETFD.Service]
DisplayName     = %NVENETFD.Service.DispName%
ServiceType     = 1 ;%SERVICE_KERNEL_DRIVER%
StartType       = 3 ;%SERVICE_DEMAND_START%
ErrorControl    = 1 ;%SERVICE_ERROR_NORMAL%
ServiceBinary   = %12%\nvmfdx64.sys
LoadOrderGroup  = NDIS

;-----------------------------------------------------------------------------------------
; DestinationDirs
;
[SourceDisksNames]
; diskid = description[, [tagfile] [, <unused>, subdir]]
1 = %DiskId1%, NVENETFD.tag,,

[SourceDisksFiles]
; filename_on_source = diskID[, [subdir][, size]]
nvmfdx64.sys = 1,,
fdco1.dll = 1,,
nvconrm.dll = 1,,
nvunrm.exe = 1,,
nvnrm.nvu = 1,,

[DestinationDirs]
NVENET.CopyFiles     = 12
NVENET_CoInstaller_CopyFiles = 11 ; System Dir( system32 on NT )

;-------------- Coinstaller installation

[NVENET2S.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET30.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET40.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET41.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET51.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET55.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET61.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET61_DELL.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET65.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET67.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET73.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET77.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENET79.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=NVENET_CoInstaller_CopyFiles

[NVENETVFD.ndi.NTamd64.CoInstallers]
AddReg=CoInstaller_AddReg_VFD
CopyFiles=NVENET_CoInstaller_CopyFiles_VFD

[NVENET_CoInstaller_CopyFiles]
fdco6.dll,fdco1.dll,,0x00004000 
nvconrm.dll,,,0x00004000 
nvunrm.exe 
nvnrm.nvu 

[CoInstaller_AddReg]
HKR,,CoInstallers32,0x00010000,		\
	"fdco6.dll,FDCoInstaller",	\
	"nvconrm.dll,NVCoInstaller"

HKR, Uninstall, Script,0,"nvnrm.nvu"
HKR, Uninstall, Name,0,"NVIDIA Ethernet Driver Components"
HKR, Uninstall, INFSrcDir, 0, %1% 
HKR, Uninstall, Uninstaller,0,"nvunrm.exe"

[NVENET_CoInstaller_CopyFiles_VFD]
fdco6.dll,fdco1.dll,,0x00004000 

[CoInstaller_AddReg_VFD]
HKR,,CoInstallers32,0x00010000,"fdco6.dll,FDCoInstaller"

[common.EventLog]
AddReg = common.AddEventLog.reg

[common.AddEventLog.reg]
HKR, , EventMessageFile, 0x00020000, "%%SystemRoot%%\System32\netevent.dll"
HKR, , TypesSupported,   0x00010001, 7

;=========================================================================================
;                              Registry Section
;=========================================================================================
[NVENETVFD.NDI.AddReg]
HKR,,IMMiniport, 0x00010001, 1
HKR, Ndi,               Service,    0,  NVENETFD
HKR, Ndi\Interfaces,    LowerRange, 0,  "ethernet"
HKR, Ndi\Interfaces,    UpperRange, 0,  "ndis5"

[BasicFeatures.reg]
HKR, Ndi,                                       Service,                   0, "NVENETFD"
HKR, Ndi\Interfaces,                            LowerRange,                0, "ethernet"
HKR, Ndi\Interfaces,                            UpperRange,                0, "ndis5"

; Interrupt Moderation
HKR, Ndi\params\*InterruptModeration,           ParamDesc,     0, "%InterruptModeration%"
HKR, Ndi\params\*InterruptModeration,           default,       0, "1"
HKR, Ndi\params\*InterruptModeration,           type,          0, "enum"
HKR, Ndi\params\*InterruptModeration\enum,      "0",           0, "%Disabled%"
HKR, Ndi\params\*InterruptModeration\enum,      "1",           0, "%Enabled%"

; Wake on LAN from power off
HKR, Ndi\params\EthWOLFromPowerOff,             ParamDesc,  0, "%WakeOnLANFromPowerOff%"
HKR, Ndi\params\EthWOLFromPowerOff,             default,    0, "1"
HKR, Ndi\params\EthWOLFromPowerOff,             type,       0, "enum"
HKR, Ndi\params\EthWOLFromPowerOff\enum,        "0",        0, "%Disabled%"
HKR, Ndi\params\EthWOLFromPowerOff\enum,        "1",        0, "%Enabled%"

; Low power link speed
HKR, Ndi\params\LowPowerStateLinkSpeed,         ParamDesc,  0, "%LowPowerStateLinkSpeed%" 
HKR, Ndi\params\LowPowerStateLinkSpeed,         default,    0, "1"
HKR, Ndi\params\LowPowerStateLinkSpeed,         type,       0, "enum"
HKR, Ndi\params\LowPowerStateLinkSpeed\enum,    "0",        0, "%Disabled%"
HKR, Ndi\params\LowPowerStateLinkSpeed\enum,    "1",        0, "%Enabled%"

; IEEE 802.1pq
HKR, Ndi\params\EthVLANId,                      ParamDesc,  0, "%VLANId%"
HKR, Ndi\params\EthVLANId,                      default,    0, "1"
HKR, Ndi\params\EthVLANId,                      type,       0, "word"
HKR, Ndi\params\EthVLANId,                      min,        0, "1"
HKR, Ndi\params\EthVLANId,                      max,        0, "4095"

; Basic Flow Control
[BasicFlowControl.reg]
HKR, Ndi\params\*FlowControl,                   ParamDesc,      0, "%FlowControl%" 
HKR, Ndi\Params\*FlowControl,                   default,        0, "0"
HKR, Ndi\Params\*FlowControl,                   type,           0, "enum"
HKR, Ndi\Params\*FlowControl\Enum,              "0",            0, %FlowControlDisabled%
HKR, Ndi\Params\*FlowControl\Enum,              "2",            0, %FlowControlRxEnabled%
 

; Flow Control
[FlowControl.reg]
HKR, Ndi\params\*FlowControl,                   ParamDesc,      0, "%FlowControl%" 
HKR, Ndi\Params\*FlowControl,                   default,        0, "0"
HKR, Ndi\Params\*FlowControl,                   type,           0, "enum"
HKR, Ndi\Params\*FlowControl\Enum,              "0",            0, %FlowControlDisabled%
HKR, Ndi\Params\*FlowControl\Enum,              "1",            0, %FlowControlTxEnabled%
HKR, Ndi\Params\*FlowControl\Enum,              "2",            0, %FlowControlRxEnabled%
HKR, Ndi\Params\*FlowControl\Enum,              "3",            0, %FlowControlRxTxEnabled%

; Jumbo	Packet
[JumboPacket.reg]
HKR, Ndi\params\*JumboPacket,                   ParamDesc,	0, "%JumboPacket%"
HKR, Ndi\params\*JumboPacket,                   default,	0, "1514"
HKR, Ndi\params\*JumboPacket,                   type,		0, "enum"
HKR, Ndi\params\*JumboPacket\enum,              "1514",     0, "%JumboNo%"
HKR, Ndi\params\*JumboPacket\enum,              "2514",     0, "%Jumbo2k%"
HKR, Ndi\params\*JumboPacket\enum,              "4514",     0, "%Jumbo4k%"
HKR, Ndi\params\*JumboPacket\enum,              "9014",     0, "%Jumbo8k%"

; Receive Side Scaling
[ReceiveSideScaling.reg]
HKR, Ndi\params\*RSS,                           ParamDesc,          0, "%RSS%"
HKR, Ndi\params\*RSS,                           default,            0, "1"
HKR, Ndi\params\*RSS,                           type,               0, "enum"
HKR, Ndi\params\*RSS\enum,                      "0",                0, "%Disabled%"
HKR, Ndi\params\*RSS\enum,                      "1",                0, "%Enabled%"

[ReceiveSideScalingDel.reg]
HKR, Ndi\params\*RSS

; Speed Duplex Setting
[SpeedDuplexNoAutoForce.reg]
HKR, Ndi\params\*SpeedDuplex,                   ParamDesc,          0, "%SpeedDuplex%"
HKR, Ndi\params\*SpeedDuplex,                   default,            0, "0"
HKR, Ndi\params\*SpeedDuplex,                   type,               0, "enum"
HKR, Ndi\params\*SpeedDuplex\enum,              "0",                0, "%AutoNegotiation%"
HKR, Ndi\params\*SpeedDuplex\enum,              "1",                0, "%HD10MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "2",                0, "%FD10MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "3",                0, "%HD100MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "4",                0, "%FD100MB%"

; Speed Duplex Setting
[SpeedDuplexUpto1000.reg]
HKR, Ndi\params\*SpeedDuplex,                   ParamDesc,          0, "%SpeedDuplex%"
HKR, Ndi\params\*SpeedDuplex,                   default,            0, "0"
HKR, Ndi\params\*SpeedDuplex,                   type,               0, "enum"
HKR, Ndi\params\*SpeedDuplex\enum,              "0",                0, "%AutoNegotiation%"
HKR, Ndi\params\*SpeedDuplex\enum,              "1",                0, "%HD10MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "2",                0, "%FD10MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "3",                0, "%HD100MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "4",                0, "%FD100MB%"
HKR, Ndi\params\*SpeedDuplex\enum,              "5",                0, "%HD10MBA%"
HKR, Ndi\params\*SpeedDuplex\enum,              "6",                0, "%FD10MBA%"
HKR, Ndi\params\*SpeedDuplex\enum,              "7",                0, "%HD100MBA%"
HKR, Ndi\params\*SpeedDuplex\enum,              "8",                0, "%FD100MBA%"

[SpeedDuplexUpto1000Del.reg]
HKR, Ndi\params\*SpeedDuplex

; TCP Checksum offload V4
[TCPChecksumOffloadV4.reg]
HKR, Ndi\params\*TCPChecksumOffloadIPv4,            ParamDesc,  0, "%TCPChecksumOffloadV4%"        
HKR, Ndi\params\*TCPChecksumOffloadIPv4,            default,    0, "3"
HKR, Ndi\params\*TCPChecksumOffloadIPv4,            type,       0, "enum"
HKR, Ndi\params\*TCPChecksumOffloadIPv4\enum,       "0",        0, "%Disabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv4\enum,       "1",        0, "%TCPChecksumOffloadV4TxEnabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv4\enum,       "2",        0, "%TCPChecksumOffloadV4RxEnabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv4\enum,       "3",        0, "%TCPChecksumOffloadV4RxTxEnabled%"

[TCPChecksumOffloadV4Del.reg]
HKR, Ndi\params\*TCPChecksumOffloadIPv4

; UDP Checksum offload V4
[UDPChecksumOffloadV4.reg]
HKR, Ndi\params\*UDPChecksumOffloadIPv4,            ParamDesc,  0, "%UDPChecksumOffloadV4%"        
HKR, Ndi\params\*UDPChecksumOffloadIPv4,            default,    0, "3"
HKR, Ndi\params\*UDPChecksumOffloadIPv4,            type,       0, "enum"
HKR, Ndi\params\*UDPChecksumOffloadIPv4\enum,       "0",        0, "%Disabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv4\enum,       "1",        0, "%UDPChecksumOffloadV4TxEnabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv4\enum,       "2",        0, "%UDPChecksumOffloadV4RxEnabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv4\enum,       "3",        0, "%UDPChecksumOffloadV4RxTxEnabled%"

[UDPChecksumOffloadV4Del.reg]
HKR, Ndi\params\*UDPChecksumOffloadIPv4 

; TCP Checksum offload V6
[TCPChecksumOffloadV6.reg]
HKR, Ndi\params\*TCPChecksumOffloadIPv6,            ParamDesc,  0, "%TCPChecksumOffloadV6%" 
HKR, Ndi\params\*TCPChecksumOffloadIPv6,            default,    0, "3"
HKR, Ndi\params\*TCPChecksumOffloadIPv6,            type,       0, "enum"
HKR, Ndi\params\*TCPChecksumOffloadIPv6\enum,       "0",        0, "%Disabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv6\enum,       "1",        0, "%TCPChecksumOffloadV6TxEnabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv6\enum,       "2",        0, "%TCPChecksumOffloadV6RxEnabled%"
HKR, Ndi\params\*TCPChecksumOffloadIPv6\enum,       "3",        0, "%TCPChecksumOffloadV6RxTxEnabled%"

[TCPChecksumOffloadV6Del.reg]
HKR, Ndi\params\*TCPChecksumOffloadIPv6 

; UDP Checksum offload V6
[UDPChecksumOffloadV6.reg]
HKR, Ndi\params\*UDPChecksumOffloadIPv6,            ParamDesc,  0, "%UDPChecksumOffloadV6%" 
HKR, Ndi\params\*UDPChecksumOffloadIPv6,            default,    0, "3"
HKR, Ndi\params\*UDPChecksumOffloadIPv6,            type,       0, "enum"
HKR, Ndi\params\*UDPChecksumOffloadIPv6\enum,       "0",        0, "%Disabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv6\enum,       "1",        0, "%UDPChecksumOffloadV6TxEnabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv6\enum,       "2",        0, "%UDPChecksumOffloadV6RxEnabled%"
HKR, Ndi\params\*UDPChecksumOffloadIPv6\enum,       "3",        0, "%UDPChecksumOffloadV6RxTxEnabled%"

[UDPChecksumOffloadV6Del.reg]
HKR, Ndi\params\*UDPChecksumOffloadIPv6 

; IP Checksum offload V4
[IPChecksumOffloadV4.reg]
HKR, Ndi\params\*IPChecksumOffloadIPv4,             ParamDesc,  0, "%IPChecksumOffloadV4%" 
HKR, Ndi\params\*IPChecksumOffloadIPv4,             default,    0, "3"
HKR, Ndi\params\*IPChecksumOffloadIPv4,             type,       0, "enum"
HKR, Ndi\params\*IPChecksumOffloadIPv4\enum,        "0",        0, "%Disabled%"
HKR, Ndi\params\*IPChecksumOffloadIPv4\enum,        "1",        0, "%IPChecksumOffloadV4TxEnabled%"
HKR, Ndi\params\*IPChecksumOffloadIPv4\enum,        "2",        0, "%IPChecksumOffloadV4RxEnabled%"
HKR, Ndi\params\*IPChecksumOffloadIPv4\enum,        "3",        0, "%IPChecksumOffloadV4RxTxEnabled%"

[IPChecksumOffloadV4Del.reg]
HKR, Ndi\params\*IPChecksumOffloadIPv4

[LSOv4.reg]
HKR, Ndi\params\*LsoV1IPv4,                 ParamDesc,	0, "%LsoV1IPv4%" 
HKR, Ndi\params\*LsoV1IPv4,                 default,	0, "1"
HKR, Ndi\params\*LsoV1IPv4,                 type,		0, "enum"
HKR, Ndi\params\*LsoV1IPv4\enum,			"0",		0, "%Disabled%"
HKR, Ndi\params\*LsoV1IPv4\enum,			"1",		0, "%Enabled%"

[LSOv4Del.reg]
HKR, Ndi\params\*LsoV1IPv4 

[LSOv2Ipv4.reg]
HKR, Ndi\params\*LsoV2IPv4,                 ParamDesc,	0, "%LsoV2IPv4%" 
HKR, Ndi\params\*LsoV2IPv4,                 default,	0, "1"
HKR, Ndi\params\*LsoV2IPv4,                 type,		0, "enum"
HKR, Ndi\params\*LsoV2IPv4\enum,			"0",		0, "%Disabled%"
HKR, Ndi\params\*LsoV2IPv4\enum,			"1",		0, "%Enabled%"

[LSOv2Ipv4Del.reg]
HKR, Ndi\params\*LsoV2IPv4

[LSOv2Ipv6.reg]
HKR, Ndi\params\*LsoV2IPv6,                 ParamDesc,	0, "%LsoV2IPv6%" 
HKR, Ndi\params\*LsoV2IPv6,                 default,	0, "1"
HKR, Ndi\params\*LsoV2IPv6,                 type,		0, "enum"
HKR, Ndi\params\*LsoV2IPv6\enum,			"0",		0, "%Disabled%"
HKR, Ndi\params\*LsoV2IPv6\enum,			"1",		0, "%Enabled%"

[LSOv2Ipv6Del.reg]
HKR, Ndi\params\*LsoV2IPv6 

[BasicPriority.reg]
HKR, Ndi\params\*PriorityVLANTag,           ParamDesc,	0, "%PriorityVLANTag%" 
HKR, Ndi\params\*PriorityVLANTag,           default,	0, "1"
HKR, Ndi\params\*PriorityVLANTag,           type,		0, "enum"
HKR, Ndi\params\*PriorityVLANTag\enum,		"0",		0, "%PriorityAndVLANDisabled%"
HKR, Ndi\params\*PriorityVLANTag\enum,		"1",		0, "%PriorityEnabled%"
HKR, Ndi\params\*PriorityVLANTag\enum,		"2",		0, "%PriorityAndVLANEnabled%"


[TCPChimneyDel.reg]
HKR, Ndi\params\TCPChimney

[MSIInterrupts.reg]
HKR, "Interrupt Management", 0x00000010
HKR, "Interrupt Management\MessageSignaledInterruptProperties", 0x00000010
HKR, "Interrupt Management\MessageSignaledInterruptProperties", MSISupported, 0x00010001, 1
HKR, "Interrupt Management\MessageSignaledInterruptProperties", MessageNumberLimit, 0x00010001, 1

[PhyReset.reg]
;
; Phy reset
;
HKR, Ndi\params\PhyLPResetEnable,      		ParamDesc,  0, "%PhyResetEnable%"
HKR, Ndi\params\PhyLPResetEnable,      		default,    0, "0"
HKR, Ndi\params\PhyLPResetEnable,       	type,       0, "enum"
HKR, Ndi\params\PhyLPResetEnable\enum,  	"0",        0, "%Disable%"
HKR, Ndi\params\PhyLPResetEnable\enum,  	"1",        0, "%Enable%"

; Network Address
[NetworkAddress.reg]
HKR, Ndi\params\NetworkAddress,			ParamDesc,	0, "%NetworkAddress%"
HKR, Ndi\params\NetworkAddress,			default,	0, " "
HKR, Ndi\params\NetworkAddress,			type,		0, "edit"
HKR, Ndi\params\NetworkAddress,			LimitText,	0, "12"
HKR, Ndi\params\NetworkAddress,			UpperCase,	0, "1"
HKR, Ndi\params\NetworkAddress,			optional,	0, "1"

[NetworkAddressDel.reg]
HKR, Ndi\params\NetworkAddress

[Support.reg]
HKR, ,SupportFlag1,                     0x00010001, 0xf0040002

[Support1.reg]
HKR, ,SupportFlag1,                     0x00010001, 0xf0040000

[FDCoInfo]
OriginalInfSourcePath = %1%

[Strings]
Msft                                    = "Microsoft"
Nvidia                                  = "NVIDIA"
DiskId1                                 = "NVIDIA nForce Networking Controller Driver Disk 1"
NVENETFD.DeviceDesc                     = "NVIDIA nForce Networking Controller"
NVENETVFD.DeviceDesc                    = "NVIDIA nForce Networking Controller Virtual"
NVENETFD.Service.DispName               = "NVIDIA nForce Networking Controller Driver"
Enabled                                 = "Enabled"
Disabled                                = "Disabled"
RSS                                     = "Receive Side Scaling"
JumboPacket                             = "Jumbo Packet"
LsoV1IPv4                               = "Large Send Offload V1 (IPv4)"
LsoV2IPv4                               = "Large Send Offload V2 (IPv4)"
LsoV2IPv6                               = "Large Send Offload V2 (IPv6)"
NetworkAddress                          = "Network Address"
InterruptModeration                     = "Interrupt Moderation"        
Enable                                  = "Enable"
Disable                                 = "Disable"
LowPowerStateLinkSpeed                  = "Low Power State Link Speed"
VLANSupport                             = "VLAN Support"
VLANId                                  = "VLAN Id"
;
; Wake on LAN from power off
;
WakeOnLANFromPowerOff                   = "WakeOnLAN From PowerOff"

;
; Speed and Duplex settings
;
SpeedDuplex                             = "Speed/duplex settings"
Autonegotiation                         = "Auto Negotiation"
HD10MB                                  = "10 Mb Half Duplex"
FD10MB                                  = "10 Mb Full Duplex"
HD100MB                                 = "100 Mb Half Duplex" 
FD100MB                                 = "100 Mb Full Duplex"
HD10MBA					= "Autoneg for 10HD"
FD10MBA					= "Autoneg for 10FD"
HD100MBA				= "Autoneg for 100HD"
FD100MBA				= "Autoneg for 100FD"

;
; Flow Control values
;
FlowControl                             = "Flow Control"
FlowControlDisabled                     = "Disabled"
FlowControlRxEnabled                    = "Rx Enabled"
FlowControlTxEnabled                    = "Tx Enabled"
FlowControlRxTxEnabled                  = "Rx & Tx Enabled"

;
; TCP Checkum offload V4
;
TCPChecksumOffloadV4                    = "TCP Checksum Offload (IPv4)"
TCPChecksumOffloadV4RxEnabled           = "RX Enabled"
TCPChecksumOffloadV4TxEnabled           = "TX Enabled"
TCPChecksumOffloadV4RxTxEnabled         = "RX & TX Enabled"

;
; UDP Checkum offload V4
;
UDPChecksumOffloadV4                    = "UDP Checksum Offload (IPv4)"
UDPChecksumOffloadV4RxEnabled           = "RX Enabled"
UDPChecksumOffloadV4TxEnabled           = "TX Enabled"
UDPChecksumOffloadV4RxTxEnabled         = "RX & TX Enabled"

; TCP Checkum offload V6
;
TCPChecksumOffloadV6                    = "TCP Checksum Offload (IPv6)"
TCPChecksumOffloadV6RxEnabled	        = "RX Enabled"
TCPChecksumOffloadV6TxEnabled	        = "TX Enabled"
TCPChecksumOffloadV6RxTxEnabled	        = "RX & TX Enabled"

;
; UDP Checkum offload V6
;
UDPChecksumOffloadV6                    = "UDP Checksum Offload (IPv6)"
UDPChecksumOffloadV6RxEnabled	        = "RX Enabled"
UDPChecksumOffloadV6TxEnabled	        = "TX Enabled"
UDPChecksumOffloadV6RxTxEnabled	        = "RX & TX Enabled"

; IP Checksum offload V4
;
IPChecksumOffloadV4                     = "IP Checksum Offload"
IPChecksumOffloadV4RxEnabled            = "RX Enabled"
IPChecksumOffloadV4TxEnabled            = "TX Enabled"
IPChecksumOffloadV4RxTxEnabled          = "RX & TX Enabled"

;
; VLAN & Priority 
;
PriorityVLANTag                         = "Priority & VLAN"
PriorityAndVLANDisabled                 = "Priority & VLAN Disabled"
PriorityEnabled                         = "Priority Enabled"
PriorityAndVLANEnabled                  = "Priority & VLAN Enabled"

;
; Jumbo Frame settings
;
JumboNo			= "1514 bytes"
Jumbo2k			= "2514 bytes"
Jumbo4k 		= "4514 bytes"
Jumbo8k			= "9014 bytes"			

;
; TCP Chimney Support
;
TCPChimney              = "TCP Chimney Offload"

;
; Low power PHY reset
;
PhyResetEnable          = "Reset PHY If Not In Use"	
